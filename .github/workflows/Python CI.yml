name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies (Linux)
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pycodestyle pyflakes exceptiongroup nbconvert nbval ipython
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash
      if: runner.os == 'Linux'
      
    - name: Install dependencies (Windows)
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pycodestyle pyflakes exceptiongroup nbconvert nbval ipython
        if (Test-Path requirements.txt) {pip install -r requirements.txt}
      shell: pwsh
      if: runner.os == 'Windows'
      
    - name: Install dependencies (macOS)
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pycodestyle pyflakes exceptiongroup nbconvert nbval ipython
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash
      if: runner.os == 'macOS'
      
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Convert notebooks to scripts and test with pytest
      env:
        ROHDATEN_LOCAL_PATH: ""
      run: |
        for notebook in *.ipynb; do
          jupyter nbconvert --to script "$notebook"
          pytest --nbval-lax "$notebook"
        done
      shell: bash
